import telebot
from telebot import types
from bot_info import keys, TOKEN
from extensions import APIException, GetPrice
import time


bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start', 'help'])
def help(message: telebot.types.Message):
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üìã –°–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç')
    item2 = types.KeyboardButton('üîç –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞')
 
    markup.add(item1, item2)
 
    text_for_start = '\
–ü—Ä–∏–≤–µ—Ç! –Ø - {0.first_name}, –ø–µ—Ä–µ–≤–æ–∂—É –≤–∞–ª—é—Ç—ã –º–µ–∂–¥—É —Å–æ–±–æ–π.\n\
–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "üîç –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞", —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞,\
 –∏–ª–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å—Ä–∞–∑—É –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n\
<–∏–º—è –≤–∞–ª—é—Ç—ã> <–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏>\
 <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ–π –≤–∞–ª—é—Ç—ã>\n\
–ù–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É "üìã –°–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç", –í—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≤–∞–ª—é—Ç–∞–º–∏.'.format(bot.get_me())
    
    bot.reply_to(message, text_for_start, reply_markup=markup)

@bot.message_handler(content_types=['text'])
def exchange(message: telebot.types.Message):

    if message.text == 'üìã –°–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç':
        text = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:'
        for key in keys.keys():
            text = '\n'.join((text, key))
        bot.reply_to(message, text)
    
    elif message.text == 'üîç –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞':
        bot.reply_to(message, '—Ä—É–±–ª—å –µ–≤—Ä–æ 20.45')

    elif message.text != 'üîç –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞' and message.text != 'üìã –°–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç':

        try:
            values = message.text.split(' ')

            if len(values) != 3:
                raise APIException('–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.')

            quote, base, amount = values
            total_base = GetPrice.exch(quote, base, amount)
        
        except APIException as e:
            bot.reply_to(message, f'–û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n{e}')
        
        except Exception as e:
            bot.reply_to(message, f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\n{e}')
        
        else:
            sti = open('C:/Users/Oblre/Desktop/–õ–∏—á–Ω–æ–µ/PYTHON/SkillFactory/tg_bot/AnimatedSticker.tgs', 'rb')
            text = f'–¶–µ–Ω–∞ {amount} {keys[quote]} –≤ {keys[base]} : {total_base}'
            bot.send_sticker(message.chat.id, sti)
            bot.send_message(message.chat.id, text)

while True:
    try:
        bot.polling(none_stop=True)

    except Exception as e:
        print(e)  # –∏–ª–∏ import traceback; traceback.print_exc() –¥–ª—è –ø–µ—á–∞—Ç–∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ—ã
        time.sleep(15)